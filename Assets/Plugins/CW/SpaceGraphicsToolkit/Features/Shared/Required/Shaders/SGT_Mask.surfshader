BEGIN_PROPERTIES
	[Header(SPHERE MASK)]
	[KeywordEnum(Off, Cutout, Alpha, Color)] _SGT_SphereMask ("	Enabled", Float) = 0
	_SGT_SphereMaskPosition("	Position", Vector) = (0.0, 0.0, 0.0)
	_SGT_SphereMaskRadius("	Radius", Float) = 1.0
	_SGT_SphereMaskFalloff("	Falloff", Float) = 3.0
END_PROPERTIES

BEGIN_CBUFFER
	float3 _SGT_SphereMaskPosition;
	float  _SGT_SphereMaskRadius;
	float  _SGT_SphereMaskFalloff;
END_CBUFFER

BEGIN_DEFINES
	#pragma shader_feature_local _SGT_SPHEREMASK_OFF _SGT_SPHEREMASK_CUTOUT _SGT_SPHEREMASK_ALPHA _SGT_SPHEREMASK_COLOR
END_DEFINES

BEGIN_CODE
	void SurfaceFunction(inout Surface o, inout ShaderData d)
	{
	#if _SGT_SPHEREMASK_CUTOUT || _SGT_SPHEREMASK_ALPHA || _SGT_SPHEREMASK_COLOR
		float dist = distance(d.worldSpacePosition, _SGT_SphereMaskPosition);
		if (dist > _SGT_SphereMaskRadius)
		{
			discard;
		}
		#if _SGT_SPHEREMASK_ALPHA
			o.Alpha *= 1.0f - saturate(pow(dist / _SGT_SphereMaskRadius, max(0.0f, _SGT_SphereMaskFalloff)));
		#elif _SGT_SPHEREMASK_COLOR
			o.Albedo *= 1.0f - saturate(pow(dist / _SGT_SphereMaskRadius, max(0.0f, _SGT_SphereMaskFalloff)));
		#endif
	#endif
	}
END_CODE